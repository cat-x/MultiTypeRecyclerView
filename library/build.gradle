apply plugin: 'com.android.library'

apply plugin: 'com.github.dcendents.android-maven'
group='com.github.cat-x'

android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha3'
    compileOnly 'com.android.support:recyclerview-v7:27.1.1'
    api 'com.android.support:support-annotations:27.1.1'
    def glide_version = "4.7.1"
    compileOnly "com.github.bumptech.glide:glide:$glide_version"
//    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
    compileOnly 'com.squareup.picasso:picasso:2.71828'
}

//--------------------------------------------------------------------
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
//    archives classesJar
    archives sourcesJar
    archives javadocJar
}